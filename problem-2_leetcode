You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.



class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode d=new ListNode(0);
        ListNode tail=d;
        int c=0;
        while(l1!=null || l2!=null)
        {
            int x=(l1!=null)?l1.val:0;
             int y=(l2!=null)?l2.val:0;
            int s=c+x+y;
            c=s/10;
            tail.next=new ListNode(s%10);
            tail=tail.next;
             if(l1!=null) l1=l1.next;
             if(l2!=null) l2=l2.next;
        }
        if(c>0)
        {
            tail.next=new ListNode(c);
        }
        return d.next;
    }
}
